let vizNames=[
	"no viz mode"           ,
	"bar graph"             ,"blobby boxes"                  ,"bouncy balls"          ,"brush"                 ,"carpet"                ,
	"cloth dot spectrum"    ,"cloudy night"                  ,"constellations"        ,"dancing ink"           ,"elasti-circle"         ,
	"emoji"                 ,"envelope of the harmonic waves","fibonaci phyllotaxy"   ,"fiber-lines"           ,"hill city"             ,
	"keratin"               ,"leaf-equi"                     ,"misty valley"          ,"molecule universe"     ,"mountainscape"         ,
	"multiple bouncy bars"  ,"outline mountain range"        ,"radar"                 ,"rainbow blob"          ,"rotating cosomos"      ,
	"runes"                 ,"snek"                          ,"softspiketunnel"       ,"spectogram"            ,"spectra 3d bars"       ,
	"spectrum blocks circle","sugar cubes"                   ,"target net"            ,"vinyl"                 ,"vlc"                   ,
	"voronoi flower"        ,"wave it"                       ,"wonky cloud balls"     ,"xpnonetial landscape"  ,"zeotrope",
	"coronaball"            ,"meta balls"
];
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


p5Viz.metaballSetup=function(p){
  p.metaballarray=[];
  for (let i=0;i<64;i++) {
    let a=Math.random()*2*Math.PI;
    let b={
      x:Math.random()*p.gph.width,
      y:Math.random()*p.gph.height,
      vx:Math.cos(a),
      vy:Math.sin(a),
      rad:20
    }
    p.metaballarray.push(b);
  }
}
p5Viz.metaballs=function(p) {
  const radius=20,num=64,maxSpeed=15;
  const G=radius/num*20;
  let data=[];
    for (let b of p.metaballarray) {
      for (let bb of p.metaballarray) {
        if (b!=bb) {
          let dstSq=(b.x-bb.x)**2+(b.y-bb.y)**2;
          if (dstSq<((b.rad+bb.rad)/2)**2) {dstSq=((b.rad+bb.rad)/2)**2;}
          let f=G*b.rad*bb.rad/dstSq;
          let a=Math.atan2(bb.y-b.y,bb.x-b.x);
          b.vx=p.constrain(b.vx+Math.cos(a)*f/b.rad,-maxSpeed,maxSpeed);
          b.vy=p.constrain(b.vy+Math.sin(a)*f/b.rad,-maxSpeed,maxSpeed);
        }
      }
    }
  let freq=p.fft.analyze();
  for (let i=0;i<64;i++) {
    b=p.metaballarray[i];
    b.x+=b.vx;
    b.y+=b.vy;
    if (b.x<       b.rad) {b.x=      b.rad;b.vx*=-1;}
    if (b.x>p.gph.width -b.rad) {b.x=p.gph.width -b.rad;b.vx*=-1;}
    if (b.y<       b.rad) {b.y=      b.rad;b.vy*=-1;}
    if (b.y>p.gph.height-b.rad) {b.y=p.gph.height-b.rad;b.vy*=-1;}
    data.push(b.x,b.y,freq[i]/5);
  }
  p.gph.shader(p.metaShader);
  p.metaShader.setUniform("metaballarray",data);
  p.gph.rect(0,0,p.gph.width,p.gph.height);
  p.image(p.gph,0,0,p.width,p.height);
}

function metaballmetaShader(p) {
  const vert = `
    precision highp float;
    attribute vec3 aPosition;
    attribute vec2 aTexCoord;
    varying vec2 vTexCoord;
    void main() {
      vTexCoord = aTexCoord;
      vec4 positionVec4=vec4(aPosition,1.);
      positionVec4.xy=positionVec4.xy*2.-1.;
      gl_Position = positionVec4;
    }
  `;
  const frag = `
    precision highp float;
    varying vec2 vTexCoord;
    const float WIDTH=${p.windowWidth}.;
    const float HEIGHT=${p.windowHeight}.;
    uniform vec3 metaballarray[64];
    void main() {
      float x=vTexCoord.x*WIDTH;
      float y=HEIGHT-vTexCoord.y*HEIGHT;
      float r=0.;
      for (int i=0;i<64;i++) {
        vec3 b=metaballarray[i];
        r+=b.z*b.z/((b.x-x)*(b.x-x)+(b.y-y)*(b.y-y));
      }
      //r=pow(r,3./4.);
      float g=(r-.5)*2.;
      float b=(r-5./6.)*6.;
      gl_FragColor = vec4(r,g,b,1.);
    }
  `;
  return new p5.Shader(p._renderer, vert, frag);
}









///------------------------------
p5Viz.initiateVizVars=function(p){
//````````````````````````````````````````````````````````
	p5Viz.blobbyboxesVars(p);
	p5Viz.bouncyVars(p);
	p5Viz.brushVars(p);
	p5Viz.carpetVars(p);
	p5Viz.clothdotspectrumVars(p);
	p5Viz.cloudynightVars(p);
	p5Viz.constellationsVars(p);
	p5Viz.elasticircleVars(p);
	p5Viz.envelopeVars(p);
	p5Viz.fibbonociVars(p);
	p5Viz.hillcityVars(p);
	p5Viz.keratinVars(p);
	p5Viz.inkdanceVars(p);
	p5Viz.leafequilizerVars(p);
	p5Viz.mistyValleyVars(p);
	p5Viz.moleculeuniverseVars(p);
	p5Viz.mountainsVars(p);
	p5Viz.multiBarsVars(p);
	p5Viz.radarVars(p);
	p5Viz.rainbowblobsVars(p);
	p5Viz.rotatingcosomosVars(p);
	p5Viz.runeVars(p);
	p5Viz.sneksVars(p);
	p5Viz.softspiketunnelVars(p);
 	p5Viz.spectogramVars(p);
	p5Viz.spectrabars3dVars(p);
	p5Viz.spectrumcircleVars(p);
	p5Viz.sugarCubesVars(p);
	p5Viz.targetNetVars(p);
	p5Viz.vinylVars(p);
	p5Viz.vlcVars(p);
	p5Viz.voronoiflowerVars(p);
	p5Viz.wonkyCloudBallsVars(p);
	p5Viz.xponentialScapeVars(p);
 	p5Viz.zeotropeVars(p);
 	p5Viz.customVars(p);
 	p5Viz.metaballSetup(p);
	//```````````````````````````````````````````````````````````
}

//=========================================================

p5Viz.rendersketch=function(p){
			 if (vizid== 0){p5Viz.clear();}
		else if (vizid== 1){p5Viz.barGraph(p);}
		else if (vizid== 2){p5Viz.blobbyboxes(p);}
		else if (vizid== 3){p5Viz.bouncy(p);}
		else if (vizid== 4){p5Viz.brush(p);}
		else if (vizid== 5){p5Viz.carpet(p);}
		else if (vizid== 6){p5Viz.clothdotspectrum(p);}
		else if (vizid== 7){p5Viz.cloudynight(p);}
		else if (vizid== 8){p5Viz.constellations(p);}
		else if (vizid== 9){p5Viz.dancingink(p);}
		else if (vizid==10){p5Viz.elasticircle(p);}
		else if (vizid==11){p5Viz.emoji(p);}
		else if (vizid==12){p5Viz.envelope(p);}
		else if (vizid==13){p5Viz.fibbonoci(p);}
		else if (vizid==14){p5Viz.fiberlines(p);}
		else if (vizid==15){p5Viz.hillcity(p);}
		else if (vizid==16){p5Viz.keratin(p);}
		else if (vizid==17){p5Viz.leafequi(p);}
		else if (vizid==18){p5Viz.mistyValley(p);}
		else if (vizid==19){p5Viz.moleculeuniverse(p);}
		else if (vizid==20){p5Viz.mountains(p);}
		else if (vizid==21){p5Viz.multiBars(p);}
		else if (vizid==22){p5Viz.outlinemountainrange(p);}
		else if (vizid==23){p5Viz.radar(p);}
		else if (vizid==24){p5Viz.rainbowblobdraw(p);}
		else if (vizid==25){p5Viz.rotatingcosomos(p);}
		else if (vizid==26){p5Viz.runes(p);}
		else if (vizid==27){p5Viz.snek(p);}
		else if (vizid==28){p5Viz.softspiketunnel(p);}
		else if (vizid==29){p5Viz.spectogram(p);}
		else if (vizid==30){p5Viz.spectra3dbars(p);}
		else if (vizid==31){p5Viz.spectrumcircle3d(p);}
		else if (vizid==32){p5Viz.sugarCubes(p);}
		else if (vizid==33){p5Viz.targetNet(p);}
		else if (vizid==34){p5Viz.vinyl(p);}
		else if (vizid==35){p5Viz.vlc(p);}
		else if (vizid==36){p5Viz.voronoiflower(p);}
		else if (vizid==37){p5Viz.waveit(p);}
		else if (vizid==38){p5Viz.wonkyCloudBalls(p);}
		else if (vizid==39){p5Viz.xponentialScape(p);}
		else if (vizid==40){p5Viz.zeotrope(p);}
		else if (vizid==41){p5Viz.coronaball(p);}
		else if (vizid==42){p5Viz.metaballs(p);}
		else p5Viz.customViz(p,vizid-1);
}