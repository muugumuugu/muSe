const fs=require("fs"),path=require("path"),express=require("express"),app=express(),port=8080;app.use(express.json({limit:"1mb"})),app.use(express.static("public")),app.use(express.static("music")),app.use(express.static("covers")),app.use(express.static(".")),app.use("/css",express.static(__dirname+"./css")),app.use("/js",express.static(__dirname+"./js")),app.use("/playlisticons",express.static(__dirname+"covers/playlisticons")),app.set("views","./ejs"),app.set("view engine","ejs");const dir="./music",dirP="./covers/playlisticons",getAllFiles=function(e,t){return files=fs.readdirSync(e),t=t||[],files.forEach(function(s){fs.statSync(e+"/"+s).isDirectory()?t=getAllFiles(e+"/"+s,t):t.push(path.join(e,"/",s))}),t.filter(s=>".mp3"===path.extname(s))},getAllPls=function(e,t){return files=fs.readdirSync(e),t=t||[],files.forEach(function(s){fs.statSync(e+"/"+s).isDirectory()?t=getAllFiles(e+"/"+s,t):t.push(path.join(e,"/",s))}),t.filter(s=>".webp"===path.extname(s))};listtxt=getAllFiles(dir),pltxt=getAllPls(dirP),app.get("/matter",(s,e)=>{e.render("matter",{songs:listtxt,pls:pltxt})}),app.get("/about",(s,e)=>{e.sendFile(__dirname+"/views/about.html")}),app.get("",(s,e)=>{e.render("matter",{songs:listtxt,pls:pltxt})}),app.post("/addintopl",(s,e)=>{data=s.body;s="#EXTINF: "+data.title;s+="\n"+data.link,console.log(s),fs.appendFile(data.fn,s,s=>{s?console.log(s):console.log("File is updated.")}),e.json({saved:s})}),app.listen(port,()=>console.info(`App listening on port ${port}`));